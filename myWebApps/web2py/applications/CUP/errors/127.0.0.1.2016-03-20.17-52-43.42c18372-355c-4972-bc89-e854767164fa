(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'auth_user.email'"
p3
sS'layer'
p4
S'C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\applications\\CUP\\controllers/crud.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\nresponse.generic_patterns = [\'crud/*\'] #abilita le view generiche\n\n#from gluon.tools import Crud\n#crud = Crud(db)\n#crud.settings.controller = \'crud\'\n\ntabelle= [tn for tn in db.tables if not tn.startswith(\'auth_\')]\n\nresponse.menu = [\n        (T(\'Home\'), False, URL(\'default\', \'index\'), []),\n        (T(\'My Tables\'), False, \'#\',\n             [ (T(tn), False, URL(\'crud\', \'tabella_%s\' % tn) ) for tn in tabelle ])\n    ]\n\n\ndef index():\n    return dict(message=T("CUP Online. Lavori in corso"))\n\ndef tabella_Categoria_servizio():return dict(grid=SQLFORM.grid( db.Categoria_servizio, user_signature=False) )\ndef tabella_Stato_prestazione():return dict(grid=SQLFORM.grid( db.Stato_prestazione, user_signature=False) )\ndef tabella_Cliente():return dict(grid=SQLFORM.grid( db.Cliente, user_signature=True) )\ndef tabella_Fornitore():return dict(grid=SQLFORM.grid( db.Fornitore, user_signature=False) )\ndef tabella_Servizio():return dict(grid=SQLFORM.grid( db.Servizio, user_signature=False) )\ndef tabella_Prestazione():return dict(grid=SQLFORM.grid( db.Prestazione, user_signature=False) )\ndef tabella_Servizio_disponibile():return dict(grid=SQLFORM.grid( db.Servizio_disponibile, user_signature=False) )\ndef tabella_Soddisfazione():return dict(grid=SQLFORM.grid( db.Soddisfazione, user_signature=False) )\nresponse._vars=response._caller(tabella_Cliente)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\applications\\CUP\\controllers/crud.py", line 28, in <module>\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\applications\\CUP\\controllers/crud.py", line 22, in tabella_Cliente\n    def tabella_Cliente():return dict(grid=SQLFORM.grid( db.Cliente, user_signature=True) )\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\sqlhtml.py", line 2469, in grid\n    search_menu = SQLFORM.search_menu(sfields, prefix=prefix)\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\sqlhtml.py", line 1895, in search_menu\n    _class=\'form-control\',\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\validators.py", line 586, in options\n    self.build_set()\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\validators.py", line 561, in build_set\n    fields = [table[k] for k in self.fields]\n  File "C:\\Users\\Administrator.DATASCIENCEVM\\Dropbox\\______________myDevProjects\\myWebApps\\myWebApps\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 517, in __getitem__\n    raise KeyError(key)\nKeyError: \'auth_user.email\'\n'
p11
s.